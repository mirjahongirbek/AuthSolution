// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestProject.Models.Db;

namespace TestProject.Migrations
{
    [DbContext(typeof(AuthDataContext))]
    [Migration("20200201120808_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("TestProject.Models.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Actions")
                        .HasColumnName("actions");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<string>("NormalizedName")
                        .HasColumnName("normalize_name");

                    b.Property<int>("Position")
                        .HasColumnName("position");

                    b.Property<int>("Roles")
                        .HasColumnName("roles");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("TestProject.Models.User.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnName("concurrency_stamp");

                    b.Property<bool>("Confirmed")
                        .HasColumnName("confirm");

                    b.Property<string>("Devices")
                        .HasColumnName("devices");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<int>("ErrorOtpCount")
                        .HasColumnName("error_otp_count");

                    b.Property<bool>("IsSendOtp")
                        .HasColumnName("is_send_otp");

                    b.Property<DateTime>("LastLoginDate")
                        .HasColumnName("last_login_date");

                    b.Property<string>("LastOtp")
                        .HasColumnName("last_otp");

                    b.Property<DateTime>("LastOtpDate")
                        .HasColumnName("last_otp_date");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("lockout_end");

                    b.Property<string>("Password")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("phone_confirm");

                    b.Property<int>("Position")
                        .HasColumnName("position");

                    b.Property<string>("RefreshToken")
                        .HasColumnName("refresh_token");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("security_stamp");

                    b.Property<string>("Token")
                        .HasColumnName("token");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name");

                    b.Property<int>("UserStatus")
                        .HasColumnName("user_status");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TestProject.Models.User.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("RoleId")
                        .HasColumnName("role_id");

                    b.Property<int>("UserId")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
